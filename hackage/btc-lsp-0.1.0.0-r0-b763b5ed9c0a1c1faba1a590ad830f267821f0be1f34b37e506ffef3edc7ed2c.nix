{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  {
    flags = { ghcid = false; };
    package = {
      specVersion = "1.12";
      identifier = { name = "btc-lsp"; version = "0.1.0.0"; };
      license = "BSD-3-Clause";
      copyright = "2022 Yolo <hello@coingaming.io>";
      maintainer = "21it <21it@tuta.io>, Mikhail Prushinskiy <mprushinsky@gmail.com>, Artem Markov <drownbes@gmail.com>";
      author = "21it <21it@tuta.io>, Mikhail Prushinskiy <mprushinsky@gmail.com>, Artem Markov <drownbes@gmail.com>";
      homepage = "https://github.com/coingaming/src";
      url = "";
      synopsis = "Lightning service provider";
      description = "You can find documentation at <https://hackage.haskell.org/package/btc-lsp>";
      buildType = "Simple";
      };
    components = {
      "library" = {
        depends = [
          (hsPkgs."GenericPretty" or (errorHandler.buildDepError "GenericPretty"))
          (hsPkgs."SHA" or (errorHandler.buildDepError "SHA"))
          (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
          (hsPkgs."async" or (errorHandler.buildDepError "async"))
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."base16-bytestring" or (errorHandler.buildDepError "base16-bytestring"))
          (hsPkgs."base64-bytestring" or (errorHandler.buildDepError "base64-bytestring"))
          (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
          (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
          (hsPkgs."case-insensitive" or (errorHandler.buildDepError "case-insensitive"))
          (hsPkgs."casing" or (errorHandler.buildDepError "casing"))
          (hsPkgs."chronos" or (errorHandler.buildDepError "chronos"))
          (hsPkgs."classy-prelude-yesod" or (errorHandler.buildDepError "classy-prelude-yesod"))
          (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
          (hsPkgs."cryptonite" or (errorHandler.buildDepError "cryptonite"))
          (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
          (hsPkgs."errors" or (errorHandler.buildDepError "errors"))
          (hsPkgs."esqueleto" or (errorHandler.buildDepError "esqueleto"))
          (hsPkgs."extra" or (errorHandler.buildDepError "extra"))
          (hsPkgs."fast-logger" or (errorHandler.buildDepError "fast-logger"))
          (hsPkgs."file-embed" or (errorHandler.buildDepError "file-embed"))
          (hsPkgs."format-numbers" or (errorHandler.buildDepError "format-numbers"))
          (hsPkgs."generic-pretty-instances" or (errorHandler.buildDepError "generic-pretty-instances"))
          (hsPkgs."hjsmin" or (errorHandler.buildDepError "hjsmin"))
          (hsPkgs."http-client-tls" or (errorHandler.buildDepError "http-client-tls"))
          (hsPkgs."http2" or (errorHandler.buildDepError "http2"))
          (hsPkgs."http2-client" or (errorHandler.buildDepError "http2-client"))
          (hsPkgs."http2-client-grpc" or (errorHandler.buildDepError "http2-client-grpc"))
          (hsPkgs."http2-grpc-proto-lens" or (errorHandler.buildDepError "http2-grpc-proto-lens"))
          (hsPkgs."http2-grpc-types" or (errorHandler.buildDepError "http2-grpc-types"))
          (hsPkgs."iso8601-time" or (errorHandler.buildDepError "iso8601-time"))
          (hsPkgs."katip" or (errorHandler.buildDepError "katip"))
          (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
          (hsPkgs."memory" or (errorHandler.buildDepError "memory"))
          (hsPkgs."microlens" or (errorHandler.buildDepError "microlens"))
          (hsPkgs."monad-logger" or (errorHandler.buildDepError "monad-logger"))
          (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
          (hsPkgs."persistent" or (errorHandler.buildDepError "persistent"))
          (hsPkgs."persistent-migration" or (errorHandler.buildDepError "persistent-migration"))
          (hsPkgs."persistent-postgresql" or (errorHandler.buildDepError "persistent-postgresql"))
          (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
          (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
          (hsPkgs."proto-lens-runtime" or (errorHandler.buildDepError "proto-lens-runtime"))
          (hsPkgs."qrcode-core" or (errorHandler.buildDepError "qrcode-core"))
          (hsPkgs."qrcode-juicypixels" or (errorHandler.buildDepError "qrcode-juicypixels"))
          (hsPkgs."resource-pool" or (errorHandler.buildDepError "resource-pool"))
          (hsPkgs."scientific" or (errorHandler.buildDepError "scientific"))
          (hsPkgs."secp256k1-haskell" or (errorHandler.buildDepError "secp256k1-haskell"))
          (hsPkgs."shakespeare" or (errorHandler.buildDepError "shakespeare"))
          (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
          (hsPkgs."template-haskell" or (errorHandler.buildDepError "template-haskell"))
          (hsPkgs."text" or (errorHandler.buildDepError "text"))
          (hsPkgs."time" or (errorHandler.buildDepError "time"))
          (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
          (hsPkgs."unbounded-delays" or (errorHandler.buildDepError "unbounded-delays"))
          (hsPkgs."universum" or (errorHandler.buildDepError "universum"))
          (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
          (hsPkgs."uuid" or (errorHandler.buildDepError "uuid"))
          (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
          (hsPkgs."wai" or (errorHandler.buildDepError "wai"))
          (hsPkgs."wai-extra" or (errorHandler.buildDepError "wai-extra"))
          (hsPkgs."warp" or (errorHandler.buildDepError "warp"))
          (hsPkgs."warp-grpc" or (errorHandler.buildDepError "warp-grpc"))
          (hsPkgs."warp-tls" or (errorHandler.buildDepError "warp-tls"))
          (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
          (hsPkgs."yaml" or (errorHandler.buildDepError "yaml"))
          (hsPkgs."yesod" or (errorHandler.buildDepError "yesod"))
          (hsPkgs."yesod-auth" or (errorHandler.buildDepError "yesod-auth"))
          (hsPkgs."yesod-core" or (errorHandler.buildDepError "yesod-core"))
          (hsPkgs."yesod-form" or (errorHandler.buildDepError "yesod-form"))
          (hsPkgs."yesod-static" or (errorHandler.buildDepError "yesod-static"))
          ];
        buildable = true;
        };
      exes = {
        "btc-lsp-exe" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            ] ++ (if flags.ghcid
            then [
              (hsPkgs."GenericPretty" or (errorHandler.buildDepError "GenericPretty"))
              (hsPkgs."SHA" or (errorHandler.buildDepError "SHA"))
              (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
              (hsPkgs."async" or (errorHandler.buildDepError "async"))
              (hsPkgs."base" or (errorHandler.buildDepError "base"))
              (hsPkgs."base16-bytestring" or (errorHandler.buildDepError "base16-bytestring"))
              (hsPkgs."base64-bytestring" or (errorHandler.buildDepError "base64-bytestring"))
              (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
              (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
              (hsPkgs."case-insensitive" or (errorHandler.buildDepError "case-insensitive"))
              (hsPkgs."casing" or (errorHandler.buildDepError "casing"))
              (hsPkgs."chronos" or (errorHandler.buildDepError "chronos"))
              (hsPkgs."classy-prelude-yesod" or (errorHandler.buildDepError "classy-prelude-yesod"))
              (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
              (hsPkgs."cryptonite" or (errorHandler.buildDepError "cryptonite"))
              (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
              (hsPkgs."errors" or (errorHandler.buildDepError "errors"))
              (hsPkgs."esqueleto" or (errorHandler.buildDepError "esqueleto"))
              (hsPkgs."extra" or (errorHandler.buildDepError "extra"))
              (hsPkgs."fast-logger" or (errorHandler.buildDepError "fast-logger"))
              (hsPkgs."file-embed" or (errorHandler.buildDepError "file-embed"))
              (hsPkgs."format-numbers" or (errorHandler.buildDepError "format-numbers"))
              (hsPkgs."generic-pretty-instances" or (errorHandler.buildDepError "generic-pretty-instances"))
              (hsPkgs."hjsmin" or (errorHandler.buildDepError "hjsmin"))
              (hsPkgs."http-client-tls" or (errorHandler.buildDepError "http-client-tls"))
              (hsPkgs."http2" or (errorHandler.buildDepError "http2"))
              (hsPkgs."http2-client" or (errorHandler.buildDepError "http2-client"))
              (hsPkgs."http2-client-grpc" or (errorHandler.buildDepError "http2-client-grpc"))
              (hsPkgs."http2-grpc-proto-lens" or (errorHandler.buildDepError "http2-grpc-proto-lens"))
              (hsPkgs."http2-grpc-types" or (errorHandler.buildDepError "http2-grpc-types"))
              (hsPkgs."iso8601-time" or (errorHandler.buildDepError "iso8601-time"))
              (hsPkgs."katip" or (errorHandler.buildDepError "katip"))
              (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
              (hsPkgs."memory" or (errorHandler.buildDepError "memory"))
              (hsPkgs."microlens" or (errorHandler.buildDepError "microlens"))
              (hsPkgs."monad-logger" or (errorHandler.buildDepError "monad-logger"))
              (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
              (hsPkgs."persistent" or (errorHandler.buildDepError "persistent"))
              (hsPkgs."persistent-migration" or (errorHandler.buildDepError "persistent-migration"))
              (hsPkgs."persistent-postgresql" or (errorHandler.buildDepError "persistent-postgresql"))
              (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
              (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
              (hsPkgs."proto-lens-runtime" or (errorHandler.buildDepError "proto-lens-runtime"))
              (hsPkgs."qrcode-core" or (errorHandler.buildDepError "qrcode-core"))
              (hsPkgs."qrcode-juicypixels" or (errorHandler.buildDepError "qrcode-juicypixels"))
              (hsPkgs."resource-pool" or (errorHandler.buildDepError "resource-pool"))
              (hsPkgs."scientific" or (errorHandler.buildDepError "scientific"))
              (hsPkgs."secp256k1-haskell" or (errorHandler.buildDepError "secp256k1-haskell"))
              (hsPkgs."shakespeare" or (errorHandler.buildDepError "shakespeare"))
              (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
              (hsPkgs."template-haskell" or (errorHandler.buildDepError "template-haskell"))
              (hsPkgs."text" or (errorHandler.buildDepError "text"))
              (hsPkgs."time" or (errorHandler.buildDepError "time"))
              (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
              (hsPkgs."unbounded-delays" or (errorHandler.buildDepError "unbounded-delays"))
              (hsPkgs."universum" or (errorHandler.buildDepError "universum"))
              (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
              (hsPkgs."uuid" or (errorHandler.buildDepError "uuid"))
              (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
              (hsPkgs."wai" or (errorHandler.buildDepError "wai"))
              (hsPkgs."wai-extra" or (errorHandler.buildDepError "wai-extra"))
              (hsPkgs."warp" or (errorHandler.buildDepError "warp"))
              (hsPkgs."warp-grpc" or (errorHandler.buildDepError "warp-grpc"))
              (hsPkgs."warp-tls" or (errorHandler.buildDepError "warp-tls"))
              (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
              (hsPkgs."yaml" or (errorHandler.buildDepError "yaml"))
              (hsPkgs."yesod" or (errorHandler.buildDepError "yesod"))
              (hsPkgs."yesod-auth" or (errorHandler.buildDepError "yesod-auth"))
              (hsPkgs."yesod-core" or (errorHandler.buildDepError "yesod-core"))
              (hsPkgs."yesod-form" or (errorHandler.buildDepError "yesod-form"))
              (hsPkgs."yesod-static" or (errorHandler.buildDepError "yesod-static"))
              ]
            else [
              (hsPkgs."btc-lsp" or (errorHandler.buildDepError "btc-lsp"))
              ]);
          buildable = true;
          };
        "btc-lsp-integration" = {
          depends = [
            (hsPkgs."QuickCheck" or (errorHandler.buildDepError "QuickCheck"))
            (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
            (hsPkgs."hspec" or (errorHandler.buildDepError "hspec"))
            (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
            (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
            (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
            (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
            (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
            (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
            ] ++ (if flags.ghcid
            then [
              (hsPkgs."GenericPretty" or (errorHandler.buildDepError "GenericPretty"))
              (hsPkgs."SHA" or (errorHandler.buildDepError "SHA"))
              (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
              (hsPkgs."async" or (errorHandler.buildDepError "async"))
              (hsPkgs."base" or (errorHandler.buildDepError "base"))
              (hsPkgs."base16-bytestring" or (errorHandler.buildDepError "base16-bytestring"))
              (hsPkgs."base64-bytestring" or (errorHandler.buildDepError "base64-bytestring"))
              (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
              (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
              (hsPkgs."case-insensitive" or (errorHandler.buildDepError "case-insensitive"))
              (hsPkgs."casing" or (errorHandler.buildDepError "casing"))
              (hsPkgs."chronos" or (errorHandler.buildDepError "chronos"))
              (hsPkgs."classy-prelude-yesod" or (errorHandler.buildDepError "classy-prelude-yesod"))
              (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
              (hsPkgs."cryptonite" or (errorHandler.buildDepError "cryptonite"))
              (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
              (hsPkgs."errors" or (errorHandler.buildDepError "errors"))
              (hsPkgs."esqueleto" or (errorHandler.buildDepError "esqueleto"))
              (hsPkgs."extra" or (errorHandler.buildDepError "extra"))
              (hsPkgs."fast-logger" or (errorHandler.buildDepError "fast-logger"))
              (hsPkgs."file-embed" or (errorHandler.buildDepError "file-embed"))
              (hsPkgs."format-numbers" or (errorHandler.buildDepError "format-numbers"))
              (hsPkgs."generic-pretty-instances" or (errorHandler.buildDepError "generic-pretty-instances"))
              (hsPkgs."hjsmin" or (errorHandler.buildDepError "hjsmin"))
              (hsPkgs."http-client-tls" or (errorHandler.buildDepError "http-client-tls"))
              (hsPkgs."http2" or (errorHandler.buildDepError "http2"))
              (hsPkgs."http2-client" or (errorHandler.buildDepError "http2-client"))
              (hsPkgs."http2-client-grpc" or (errorHandler.buildDepError "http2-client-grpc"))
              (hsPkgs."http2-grpc-proto-lens" or (errorHandler.buildDepError "http2-grpc-proto-lens"))
              (hsPkgs."http2-grpc-types" or (errorHandler.buildDepError "http2-grpc-types"))
              (hsPkgs."iso8601-time" or (errorHandler.buildDepError "iso8601-time"))
              (hsPkgs."katip" or (errorHandler.buildDepError "katip"))
              (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
              (hsPkgs."memory" or (errorHandler.buildDepError "memory"))
              (hsPkgs."microlens" or (errorHandler.buildDepError "microlens"))
              (hsPkgs."monad-logger" or (errorHandler.buildDepError "monad-logger"))
              (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
              (hsPkgs."persistent" or (errorHandler.buildDepError "persistent"))
              (hsPkgs."persistent-migration" or (errorHandler.buildDepError "persistent-migration"))
              (hsPkgs."persistent-postgresql" or (errorHandler.buildDepError "persistent-postgresql"))
              (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
              (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
              (hsPkgs."proto-lens-runtime" or (errorHandler.buildDepError "proto-lens-runtime"))
              (hsPkgs."qrcode-core" or (errorHandler.buildDepError "qrcode-core"))
              (hsPkgs."qrcode-juicypixels" or (errorHandler.buildDepError "qrcode-juicypixels"))
              (hsPkgs."resource-pool" or (errorHandler.buildDepError "resource-pool"))
              (hsPkgs."scientific" or (errorHandler.buildDepError "scientific"))
              (hsPkgs."secp256k1-haskell" or (errorHandler.buildDepError "secp256k1-haskell"))
              (hsPkgs."shakespeare" or (errorHandler.buildDepError "shakespeare"))
              (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
              (hsPkgs."template-haskell" or (errorHandler.buildDepError "template-haskell"))
              (hsPkgs."text" or (errorHandler.buildDepError "text"))
              (hsPkgs."time" or (errorHandler.buildDepError "time"))
              (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
              (hsPkgs."unbounded-delays" or (errorHandler.buildDepError "unbounded-delays"))
              (hsPkgs."universum" or (errorHandler.buildDepError "universum"))
              (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
              (hsPkgs."uuid" or (errorHandler.buildDepError "uuid"))
              (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
              (hsPkgs."wai" or (errorHandler.buildDepError "wai"))
              (hsPkgs."wai-extra" or (errorHandler.buildDepError "wai-extra"))
              (hsPkgs."warp" or (errorHandler.buildDepError "warp"))
              (hsPkgs."warp-grpc" or (errorHandler.buildDepError "warp-grpc"))
              (hsPkgs."warp-tls" or (errorHandler.buildDepError "warp-tls"))
              (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
              (hsPkgs."yaml" or (errorHandler.buildDepError "yaml"))
              (hsPkgs."yesod" or (errorHandler.buildDepError "yesod"))
              (hsPkgs."yesod-auth" or (errorHandler.buildDepError "yesod-auth"))
              (hsPkgs."yesod-core" or (errorHandler.buildDepError "yesod-core"))
              (hsPkgs."yesod-form" or (errorHandler.buildDepError "yesod-form"))
              (hsPkgs."yesod-static" or (errorHandler.buildDepError "yesod-static"))
              ]
            else [
              (hsPkgs."btc-lsp" or (errorHandler.buildDepError "btc-lsp"))
              ]);
          buildable = true;
          };
        "btc-lsp-prof" = {
          depends = [
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            ] ++ (if flags.ghcid
            then [
              (hsPkgs."GenericPretty" or (errorHandler.buildDepError "GenericPretty"))
              (hsPkgs."SHA" or (errorHandler.buildDepError "SHA"))
              (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
              (hsPkgs."async" or (errorHandler.buildDepError "async"))
              (hsPkgs."base" or (errorHandler.buildDepError "base"))
              (hsPkgs."base16-bytestring" or (errorHandler.buildDepError "base16-bytestring"))
              (hsPkgs."base64-bytestring" or (errorHandler.buildDepError "base64-bytestring"))
              (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
              (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
              (hsPkgs."case-insensitive" or (errorHandler.buildDepError "case-insensitive"))
              (hsPkgs."casing" or (errorHandler.buildDepError "casing"))
              (hsPkgs."chronos" or (errorHandler.buildDepError "chronos"))
              (hsPkgs."classy-prelude-yesod" or (errorHandler.buildDepError "classy-prelude-yesod"))
              (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
              (hsPkgs."cryptonite" or (errorHandler.buildDepError "cryptonite"))
              (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
              (hsPkgs."errors" or (errorHandler.buildDepError "errors"))
              (hsPkgs."esqueleto" or (errorHandler.buildDepError "esqueleto"))
              (hsPkgs."extra" or (errorHandler.buildDepError "extra"))
              (hsPkgs."fast-logger" or (errorHandler.buildDepError "fast-logger"))
              (hsPkgs."file-embed" or (errorHandler.buildDepError "file-embed"))
              (hsPkgs."format-numbers" or (errorHandler.buildDepError "format-numbers"))
              (hsPkgs."generic-pretty-instances" or (errorHandler.buildDepError "generic-pretty-instances"))
              (hsPkgs."hjsmin" or (errorHandler.buildDepError "hjsmin"))
              (hsPkgs."http-client-tls" or (errorHandler.buildDepError "http-client-tls"))
              (hsPkgs."http2" or (errorHandler.buildDepError "http2"))
              (hsPkgs."http2-client" or (errorHandler.buildDepError "http2-client"))
              (hsPkgs."http2-client-grpc" or (errorHandler.buildDepError "http2-client-grpc"))
              (hsPkgs."http2-grpc-proto-lens" or (errorHandler.buildDepError "http2-grpc-proto-lens"))
              (hsPkgs."http2-grpc-types" or (errorHandler.buildDepError "http2-grpc-types"))
              (hsPkgs."iso8601-time" or (errorHandler.buildDepError "iso8601-time"))
              (hsPkgs."katip" or (errorHandler.buildDepError "katip"))
              (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
              (hsPkgs."memory" or (errorHandler.buildDepError "memory"))
              (hsPkgs."microlens" or (errorHandler.buildDepError "microlens"))
              (hsPkgs."monad-logger" or (errorHandler.buildDepError "monad-logger"))
              (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
              (hsPkgs."persistent" or (errorHandler.buildDepError "persistent"))
              (hsPkgs."persistent-migration" or (errorHandler.buildDepError "persistent-migration"))
              (hsPkgs."persistent-postgresql" or (errorHandler.buildDepError "persistent-postgresql"))
              (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
              (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
              (hsPkgs."proto-lens-runtime" or (errorHandler.buildDepError "proto-lens-runtime"))
              (hsPkgs."qrcode-core" or (errorHandler.buildDepError "qrcode-core"))
              (hsPkgs."qrcode-juicypixels" or (errorHandler.buildDepError "qrcode-juicypixels"))
              (hsPkgs."resource-pool" or (errorHandler.buildDepError "resource-pool"))
              (hsPkgs."scientific" or (errorHandler.buildDepError "scientific"))
              (hsPkgs."secp256k1-haskell" or (errorHandler.buildDepError "secp256k1-haskell"))
              (hsPkgs."shakespeare" or (errorHandler.buildDepError "shakespeare"))
              (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
              (hsPkgs."template-haskell" or (errorHandler.buildDepError "template-haskell"))
              (hsPkgs."text" or (errorHandler.buildDepError "text"))
              (hsPkgs."time" or (errorHandler.buildDepError "time"))
              (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
              (hsPkgs."unbounded-delays" or (errorHandler.buildDepError "unbounded-delays"))
              (hsPkgs."universum" or (errorHandler.buildDepError "universum"))
              (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
              (hsPkgs."uuid" or (errorHandler.buildDepError "uuid"))
              (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
              (hsPkgs."wai" or (errorHandler.buildDepError "wai"))
              (hsPkgs."wai-extra" or (errorHandler.buildDepError "wai-extra"))
              (hsPkgs."warp" or (errorHandler.buildDepError "warp"))
              (hsPkgs."warp-grpc" or (errorHandler.buildDepError "warp-grpc"))
              (hsPkgs."warp-tls" or (errorHandler.buildDepError "warp-tls"))
              (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
              (hsPkgs."yaml" or (errorHandler.buildDepError "yaml"))
              (hsPkgs."yesod" or (errorHandler.buildDepError "yesod"))
              (hsPkgs."yesod-auth" or (errorHandler.buildDepError "yesod-auth"))
              (hsPkgs."yesod-core" or (errorHandler.buildDepError "yesod-core"))
              (hsPkgs."yesod-form" or (errorHandler.buildDepError "yesod-form"))
              (hsPkgs."yesod-static" or (errorHandler.buildDepError "yesod-static"))
              ]
            else [
              (hsPkgs."btc-lsp" or (errorHandler.buildDepError "btc-lsp"))
              ]);
          buildable = true;
          };
        };
      tests = {
        "btc-lsp-test" = {
          depends = [
            (hsPkgs."QuickCheck" or (errorHandler.buildDepError "QuickCheck"))
            (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
            (hsPkgs."base" or (errorHandler.buildDepError "base"))
            (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
            (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
            (hsPkgs."hspec" or (errorHandler.buildDepError "hspec"))
            (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
            (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
            (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
            (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
            (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
            (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
            ] ++ (if flags.ghcid
            then [
              (hsPkgs."GenericPretty" or (errorHandler.buildDepError "GenericPretty"))
              (hsPkgs."SHA" or (errorHandler.buildDepError "SHA"))
              (hsPkgs."aeson" or (errorHandler.buildDepError "aeson"))
              (hsPkgs."async" or (errorHandler.buildDepError "async"))
              (hsPkgs."base" or (errorHandler.buildDepError "base"))
              (hsPkgs."base16-bytestring" or (errorHandler.buildDepError "base16-bytestring"))
              (hsPkgs."base64-bytestring" or (errorHandler.buildDepError "base64-bytestring"))
              (hsPkgs."binary" or (errorHandler.buildDepError "binary"))
              (hsPkgs."bytestring" or (errorHandler.buildDepError "bytestring"))
              (hsPkgs."case-insensitive" or (errorHandler.buildDepError "case-insensitive"))
              (hsPkgs."casing" or (errorHandler.buildDepError "casing"))
              (hsPkgs."chronos" or (errorHandler.buildDepError "chronos"))
              (hsPkgs."classy-prelude-yesod" or (errorHandler.buildDepError "classy-prelude-yesod"))
              (hsPkgs."containers" or (errorHandler.buildDepError "containers"))
              (hsPkgs."cryptonite" or (errorHandler.buildDepError "cryptonite"))
              (hsPkgs."envparse" or (errorHandler.buildDepError "envparse"))
              (hsPkgs."errors" or (errorHandler.buildDepError "errors"))
              (hsPkgs."esqueleto" or (errorHandler.buildDepError "esqueleto"))
              (hsPkgs."extra" or (errorHandler.buildDepError "extra"))
              (hsPkgs."fast-logger" or (errorHandler.buildDepError "fast-logger"))
              (hsPkgs."file-embed" or (errorHandler.buildDepError "file-embed"))
              (hsPkgs."format-numbers" or (errorHandler.buildDepError "format-numbers"))
              (hsPkgs."generic-pretty-instances" or (errorHandler.buildDepError "generic-pretty-instances"))
              (hsPkgs."hjsmin" or (errorHandler.buildDepError "hjsmin"))
              (hsPkgs."http-client-tls" or (errorHandler.buildDepError "http-client-tls"))
              (hsPkgs."http2" or (errorHandler.buildDepError "http2"))
              (hsPkgs."http2-client" or (errorHandler.buildDepError "http2-client"))
              (hsPkgs."http2-client-grpc" or (errorHandler.buildDepError "http2-client-grpc"))
              (hsPkgs."http2-grpc-proto-lens" or (errorHandler.buildDepError "http2-grpc-proto-lens"))
              (hsPkgs."http2-grpc-types" or (errorHandler.buildDepError "http2-grpc-types"))
              (hsPkgs."iso8601-time" or (errorHandler.buildDepError "iso8601-time"))
              (hsPkgs."katip" or (errorHandler.buildDepError "katip"))
              (hsPkgs."lnd-client" or (errorHandler.buildDepError "lnd-client"))
              (hsPkgs."memory" or (errorHandler.buildDepError "memory"))
              (hsPkgs."microlens" or (errorHandler.buildDepError "microlens"))
              (hsPkgs."monad-logger" or (errorHandler.buildDepError "monad-logger"))
              (hsPkgs."network-bitcoin" or (errorHandler.buildDepError "network-bitcoin"))
              (hsPkgs."persistent" or (errorHandler.buildDepError "persistent"))
              (hsPkgs."persistent-migration" or (errorHandler.buildDepError "persistent-migration"))
              (hsPkgs."persistent-postgresql" or (errorHandler.buildDepError "persistent-postgresql"))
              (hsPkgs."pretty" or (errorHandler.buildDepError "pretty"))
              (hsPkgs."proto-lens" or (errorHandler.buildDepError "proto-lens"))
              (hsPkgs."proto-lens-runtime" or (errorHandler.buildDepError "proto-lens-runtime"))
              (hsPkgs."qrcode-core" or (errorHandler.buildDepError "qrcode-core"))
              (hsPkgs."qrcode-juicypixels" or (errorHandler.buildDepError "qrcode-juicypixels"))
              (hsPkgs."resource-pool" or (errorHandler.buildDepError "resource-pool"))
              (hsPkgs."scientific" or (errorHandler.buildDepError "scientific"))
              (hsPkgs."secp256k1-haskell" or (errorHandler.buildDepError "secp256k1-haskell"))
              (hsPkgs."shakespeare" or (errorHandler.buildDepError "shakespeare"))
              (hsPkgs."stm" or (errorHandler.buildDepError "stm"))
              (hsPkgs."template-haskell" or (errorHandler.buildDepError "template-haskell"))
              (hsPkgs."text" or (errorHandler.buildDepError "text"))
              (hsPkgs."time" or (errorHandler.buildDepError "time"))
              (hsPkgs."transformers" or (errorHandler.buildDepError "transformers"))
              (hsPkgs."unbounded-delays" or (errorHandler.buildDepError "unbounded-delays"))
              (hsPkgs."universum" or (errorHandler.buildDepError "universum"))
              (hsPkgs."unliftio" or (errorHandler.buildDepError "unliftio"))
              (hsPkgs."uuid" or (errorHandler.buildDepError "uuid"))
              (hsPkgs."vector" or (errorHandler.buildDepError "vector"))
              (hsPkgs."wai" or (errorHandler.buildDepError "wai"))
              (hsPkgs."wai-extra" or (errorHandler.buildDepError "wai-extra"))
              (hsPkgs."warp" or (errorHandler.buildDepError "warp"))
              (hsPkgs."warp-grpc" or (errorHandler.buildDepError "warp-grpc"))
              (hsPkgs."warp-tls" or (errorHandler.buildDepError "warp-tls"))
              (hsPkgs."witch" or (errorHandler.buildDepError "witch"))
              (hsPkgs."yaml" or (errorHandler.buildDepError "yaml"))
              (hsPkgs."yesod" or (errorHandler.buildDepError "yesod"))
              (hsPkgs."yesod-auth" or (errorHandler.buildDepError "yesod-auth"))
              (hsPkgs."yesod-core" or (errorHandler.buildDepError "yesod-core"))
              (hsPkgs."yesod-form" or (errorHandler.buildDepError "yesod-form"))
              (hsPkgs."yesod-static" or (errorHandler.buildDepError "yesod-static"))
              ]
            else [
              (hsPkgs."btc-lsp" or (errorHandler.buildDepError "btc-lsp"))
              ]);
          buildable = true;
          };
        };
      };
    }