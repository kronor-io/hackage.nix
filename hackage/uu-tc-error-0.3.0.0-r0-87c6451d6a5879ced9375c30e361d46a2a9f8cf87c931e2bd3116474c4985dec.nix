{ system
  , compiler
  , flags
  , pkgs
  , hsPkgs
  , pkgconfPkgs
  , errorHandler
  , config
  , ... }:
  {
    flags = {};
    package = {
      specVersion = "2.0";
      identifier = { name = "uu-tc-error"; version = "0.3.0.0"; };
      license = "BSD-3-Clause";
      copyright = "";
      maintainer = "p.rednaz@googlemail.com";
      author = "Andres Loeh <andres@cs.uu.nl>,\nJohan Jeuring <johanj@cs.uu.nl>,\nDoaitse Swierstra <doaitse@cs.uu.nl>,\nAdolfo Ochagav√≠a <aochagavia92@gmail.com>";
      homepage = "https://gitlab.com/rdnz/uu-tc-error";
      url = "";
      synopsis = "Haskell 98 parser combintors for INFOB3TC at Utrecht University";
      description = "This library tries to be a drop in replacement for\n@[uu-tc](https://hackage.haskell.org/package/uu-tc)@ that provides error\nmessages. However, we could not avoid additional type class constraints\non @parse@. Notice that you might need to add @Ord@ and @ErrorsPretty@\nconstraints to your own functions and ensure your own data types are\n@deriving (Ord, Show)@. See @parse@'s documentation in the\n\"ParseLib.Abstract.Core\" module too.\n\nIf you are only interested in full parses of some parser @p@, enforce\nfull parses on the @Parser@ level using the\n@\"ParseLib.Abstract.Derived\".eof@ combinator as in @parse (p <* eof)\ninput@. This ensures error reporting.\n\nReport bugs to [gitlab](https://gitlab.com/rdnz/uu-tc-error/-/issues) or\n@p.rednaz\\@googlemail.com@, please.\n\n@[uu-tc](https://hackage.haskell.org/package/uu-tc)@ generates no error\nmessages at all. Here is an example of an error messages generated by\nthis library when I made a mistake writing a lexer.\n\n> input:3:8:\n>   |\n> 3 | PRODID:-//hacksw/handcal//NONSGML v1.0//EN\n>   |        ^^^^^^^^^^^\n> unexpected \"-//hacksw/h\"\n> expecting \"2.0\", \"BEGIN\", \"DESCRIPTION\", \"DTEND\", \"DTSTAMP\", \"DTSTART\", \"END\", \"LOCATION\", \"PRODID\", \"SUMMARY\", \"UID\", \"VCALENDAR\", \"VERSION\", \"VEVENT\", ':', crlf newline, or end of input\n\nHere is an example of an error messages generated by this library when I\nmade a mistake writing a parser.\n\n> input:10:\n>   KeyClass\n>   UpperId \"Hello\"\n>   COpen\n>   KeyVoid\n>   LowerId \"main\"\n>   POpen\n>   PClose\n>   COpen\n>   LowerId \"print\"\n>   POpen\n> > ConstInt 97\n>   PClose\n>   Semicolon\n>   CClose\n>   CClose\n> unexpected '(ConstInt 97)'\n> expecting '(PClose)'\n\n__Description of @<https://hackage.haskell.org/package/uu-tc uu-tc>@__\n\nCourse software for INFOB3TC (Languages & Compilers)\n\nThis library currently contains two Haskell 98 parser combinator libraries.\n\n* The default library, available as @ParseLib@ or more explicitly\nby importing @ParseLib.Simple@, is the one described in the\nlecture notes, using a type synonym as the type for parsers.\n\n* The second library can be chosen by importing @ParseLib.Abstract@.\nIt defines the same functions as @ParseLib.Simple@, but keeps\nthe parser type abstract.\n\nIn future versions of this package, more libraries with more\nadvanced implementations of parser combinators may be added.";
      buildType = "Simple";
    };
    components = {
      "library" = {
        depends = [
          (hsPkgs."base" or (errorHandler.buildDepError "base"))
          (hsPkgs."uu-tc-error-error" or (errorHandler.buildDepError "uu-tc-error-error"))
        ];
        buildable = true;
      };
    };
  }